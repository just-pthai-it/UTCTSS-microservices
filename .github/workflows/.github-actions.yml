name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    branches:
      - ci_cd_implementation
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY_LOCALCOMPUTER: ${{ secrets.SSH_PRIVATE_KEY_LOCALCOMPUTER }}
      MY_VPS_USER: ${{ secrets.MY_VPS_USER }}
      MY_VPS_IP_ADDRESS: ${{ secrets.MY_VPS_IP_ADDRESS }}
      MY_VPS_PROJECT_PATH: ${{ secrets.MY_VPS_PROJECT_PATH }}
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: cat /proc/$$/stat | awk '{print $6}'
      - run: cat /proc/$$/stat | awk '{print $6}'
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: |
          export ABCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC=abc
          env
      - run: env
      - run: |
          eval $(ssh-agent -s)
          ssh-add <(echo "$SSH_PRIVATE_KEY_LOCALCOMPUTER")
      - run: printenv SSH_AUTH_SOCK
      - run: |
          eval $(ssh-agent -s)
      - run: printenv SSH_AUTH_SOCK
      - run: ssh-add <(echo "$SSH_PRIVATE_KEY_LOCALCOMPUTER")
      # - name: Set up SSH agent
        # uses: webfactory/ssh-agent@v0.5.4
        # with:
          # ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_LOCALCOMPUTER }}
      # - run: |
      #     eval $(ssh-agent -s)
      #     ssh-add <(echo "$SSH_PRIVATE_KEY_LOCALCOMPUTER")
      #     mkdir -p ~/.ssh
      #     ssh-keyscan -H $MY_VPS_IP_ADDRESS >> ~/.ssh/known_hosts
      #     ssh $MY_VPS_USER@$MY_VPS_IP_ADDRESS << 'EOF'
      #       whoami
      #       ls
      #       cd projects
      #       ls
      #       cd ESS-microservices
      #       ls
      #       # cd $MY_VPS_PROJECT_PATH
      #       cat ~/.bashrc
      #       . ~/.bashrc
      #       ll
      #     EOF
      - run: echo "üçè This job's status is ${{ job.status }}."
